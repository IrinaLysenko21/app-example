import React, { useState } from 'react';
import { useSelector } from 'react-redux';
import { CSSTransition } from 'react-transition-group';
import Sidebar from '../../components/Sidebar/Sidebar';
import NotesList from '../../components/NotesList/NoteList';
import * as notepadSelectors from '../../redux/notepad/notepadSelectors';
import appearTransition from '../../assets/transitions/slide.module.scss';
// import s from './MainPage.module.scss';

const MainPage = () => {
  const highPriorityNotes = useSelector(notepadSelectors.highPriorityNotes);

  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const toggleIsSidebarOpen = () => setIsSidebarOpen(!isSidebarOpen);

  return (
    <div className="page">
      <div className="page__contentWrap">
        <div className="container">
          <div className="page__innerContentWrap">
            <div className="page__content">
              <h2>Mainpage</h2>
              <p className="page__text">
                Пробуем React React изначально был спроектирован так, чтобы его
                можно было внедрять постепенно. Другими словами, вы можете
                начать с малого и использовать только ту функциональность React,
                которая необходима вам в данный момент. Информация в этом
                разделе будет полезна в любой ситуации: при первом знакомстве с
                React, при создании простой динамической HTML-страницы и даже
                при проектировании сложного React-приложения. Онлайн-песочницы
                Если вы просто хотите немного поиграть с React, попробуйте
                онлайн-песочницу. Например, вот простейший шаблон на CodePen,
                CodeSandbox, Glitch или Stackblitz. Если вы предпочитаете
                работать в своём редакторе, скачайте тестовый HTML-файл,
                добавьте в него код и запустите на своём компьютере. При
                открытии тестового файла браузер преобразует JSX в обычный код
                на JavaScript. Такое преобразование достаточно медленно, поэтому
                мы рекомендуем использовать этот файл только для простых
                демонстрационных примеров. Добавляем React на сайт Вы можете
                добавить React на свой сайт буквально за одну минуту. После
                этого можно разместить на сайте несколько динамических виджетов
                и постепенно наращивать использование React в своём проекте.
                Создаём React-приложение Когда вы начинаете проект на React, то
                простая HTML-страница со script-тегами может быть лучшим
                вариантом. Её можно сделать за минуту. Однако для разработки
                более развесистого приложения вам, скорее всего, придётся
                рассмотреть другие варианты настройки рабочего окружения,
                объединяющие в себе различные технологии. Вот несколько наборов
                JavaScript-инструментов, которые мы рекомендуем для создания
                приложения. Каждый из этих инструментов может работать
                практически без настройки и позволит раскрыть все возможности
                экосистемы React. Подробнее об инструментах. Изучаем React Люди
                приходят к React с разным опытом и стилем обучения. Некоторые
                предпочитают учиться на ходу, а кому-то нравится сначала
                овладеть теорией. В любом случае мы надеемся, что этот раздел
                будет для вас полезен. Если вам больше нравится учиться на ходу,
                начните с введения. Если вы хотите сначала овладеть теорией, то
                начните с пошагового описания React. React сначала может
                показаться сложным, но приложив усилие, вы обязательно его
                освоите. Терпение и труд все перетрут! Простые примеры На
                главной странице есть несколько простых примеров использования
                React. Их можно отредактировать и запустить прямо на нашем
                сайте. Даже если вы пока ничего не знаете о React, попробуйте
                что-нибудь поменять в коде и посмотрите на результат. React для
                новичков Если документация кажется вам сложной и усваивается не
                так быстро, как хотелось, прочтите блог Тани Раша (Tania
                Rascia). Таня написала о том, как начала работать с React и
                доходчиво рассказала об его основных принципах. Попробуйте
                почитать этот пост, а потом вернуться к документации. React для
                дизайнеров Если вы в первую очередь занимаетесь дизайном, вам
                могут пригодиться ресурсы, собранные на этом сайте. Ресурсы по
                JavaScript Изучение React предполагает наличие некоторых знаний
                о программировании на языке JavaScript. Глубоких знаний не
                потребуется, но учить React и JavaScript одновременно может быть
                тяжело. Чтобы освежить ваши знания, мы рекомендуем просмотреть
                обзор языка JavaScript на сайте mozilla.org. Для этого
                потребуется от 30 минут до часа. Надеемся, что теперь вы будете
                чувствовать себя более комфортно, изучая React. Совет Если
                всё-таки у вас есть пробелы в знаниях, то сайты MDN и
                learn.javascript.ru будут отличными источниками информации о
                JavaScript. Также всегда можно задать вопрос или попросить
                помощи на форумах нашего сообщества. Введение Если вы
                предпочитаете изучать технологии на практике, воспользуйтесь
                введением. В нём описан процесс разработки игры в
                крестики-нолики. Даже если вы не планируете программировать
                игры, всё равно уделите внимание этому разделу документации.
                Приёмы, которые вы освоите — фундамент для разработки любых
                приложений на React. Введение даст вам более глубокое понимание
                React. Пошаговое описание React Если вам больше нравится
                познавать предмет шаг за шагом, то лучше начать с пошагового
                описания React. Каждая последующая глава описания опирается на
                знания из предыдущей, поэтому вы ничего не упустите в процессе
                изучения материала. Философия React Многие вспоминают, как
                чтение Философии React поставило всё на свои места. Пускай это и
                самое древнее руководство по React, но оно всё так же актуально.
                Рекомендуемые курсы Некоторым больше нравится учиться по книгам
                или видеокурсам от сторонних авторов, а не по официальной
                документации. Для них мы разместили список рекомендуемых
                ресурсов. Часть этих ресурсов бесплатны. Углублённое изучение
                React После того, как вы изучите основные принципы React и
                немного поиграетесь с ним, можно углубиться в более продвинутые
                темы документации. В этих главах описаны полезные, но не так
                часто используемые возможности React. Например, контекст и рефы.
                Справочник API Этот раздел документации описывает нюансы
                использования React API. Например, в главе React.Component API
                рассказывается о работе функции setState() и различных методах
                управления жизненным циклом компонентов. Глоссарий и FAQ
                Глоссарий содержит перечень наиболее употребляемых терминов,
                которые встречаются в документации. Также есть раздел FAQ. В нём
                короткие вопросы и ответы на самые животрепещущие темы, такие
                как использование AJAX, состояние компонентов или структура
                проекта.
              </p>
            </div>
            <button
              className="page__btn"
              type="button"
              onClick={toggleIsSidebarOpen}
            >
              <i className="las la-clipboard"></i>
            </button>
          </div>
        </div>
      </div>

      <CSSTransition
        in={isSidebarOpen}
        timeout={250}
        classNames={appearTransition}
        unmountOnExit
      >
        <Sidebar title="High priority tasks">
          {highPriorityNotes.length > 0 && (
            <NotesList notes={highPriorityNotes} inSidebar={true} />
          )}
        </Sidebar>
      </CSSTransition>
    </div>
  );
};

export default MainPage;
